/**
 * MSW (Mock Service Worker) „Çµ„Éº„Éê„ÉºË®≠ÂÆö
 *
 * ÁõÆÁöÑ: JestÔºàNode.jsÁí∞Â¢ÉÔºâ„ÅßMSW„Çí‰Ωø„Åà„Çã„Çà„ÅÜ„Å´„Åô„Çã
 *
 * „Åì„ÅÆ„Éï„Ç°„Ç§„É´„Åß„ÇÑ„Å£„Å¶„ÅÑ„Çã„Åì„Å®:
 * 1. handlers.ts „ÅßÂÆöÁæ©„Åó„ÅüAPI„É¢„ÉÉ„ÇØ„ÇíË™≠„ÅøËæº„ÇÄ
 * 2. Node.jsÁî®„ÅÆMSW„Çµ„Éº„Éê„Éº„Ç§„É≥„Çπ„Çø„É≥„Çπ„Çí‰ΩúÊàê
 * 3. „ÉÜ„Çπ„ÉàÈñãÂßãÂâç„ÉªÁµÇ‰∫ÜÂæå„ÅÆÂá¶ÁêÜ„ÇíÂÆöÁæ©
 *
 * ‰Ωø„ÅÑÊñπ:
 * - jest.setup.js „Åß„Åì„ÅÆ„Éï„Ç°„Ç§„É´„Çí„Ç§„É≥„Éù„Éº„Éà„Åó„ÄÅ„Çµ„Éº„Éê„Éº„ÇíËµ∑Âãï
 * - „Åô„Åπ„Å¶„ÅÆ„ÉÜ„Çπ„Éà„ÅßËá™ÂãïÁöÑ„Å´API„É¢„ÉÉ„ÇØ„ÅåÊúâÂäπ„Å´„Å™„Çã
 */

import { setupServer } from 'msw/node'
import { handlers } from './handlers'

/**
 * MSW„Çµ„Éº„Éê„Éº„Ç§„É≥„Çπ„Çø„É≥„Çπ‰ΩúÊàê
 *
 * setupServer() „Å´ handlers „ÇíÊ∏°„Åô„Åì„Å®„Åß„ÄÅ
 * „ÉÜ„Çπ„Éà‰∏≠„ÅÆ„Åô„Åπ„Å¶„ÅÆHTTP„É™„ÇØ„Ç®„Çπ„Éà„Åå„Ç§„É≥„Çø„Éº„Çª„Éó„Éà„Åï„Çå„Åæ„Åô„ÄÇ
 *
 * ‰æã:
 * ```typescript
 * // „ÉÜ„Çπ„Éà„Ç≥„Éº„ÉâÂÜÖ„Åß fetch „ÇíÂëº„Å≥Âá∫„Åô
 * const response = await fetch('/api/user/user-1')
 * // ‚Üí MSW„Åå„Ç≠„É£„ÉÉ„ÉÅ„Åó„Å¶„ÄÅhandlers.ts „ÅÆ„É¢„ÉÉ„ÇØ„É¨„Çπ„Éù„É≥„Çπ„ÇíËøî„Åô
 * ```
 */
export const server = setupServer(...handlers)

/**
 * „ÉÜ„Çπ„Éà„É©„Ç§„Éï„Çµ„Ç§„ÇØ„É´„Éï„ÉÉ„ÇØ
 *
 * beforeAll: „Åô„Åπ„Å¶„ÅÆ„ÉÜ„Çπ„Éà„ÅåÂßã„Åæ„ÇãÂâç„Å´1Âõû„Å†„ÅëÂÆüË°å
 * afterEach: ÂêÑ„ÉÜ„Çπ„Éà„ÅåÁµÇ„Çè„Çã„Åü„Å≥„Å´ÂÆüË°å
 * afterAll: „Åô„Åπ„Å¶„ÅÆ„ÉÜ„Çπ„Éà„ÅåÁµÇ„Çè„Å£„ÅüÂæå„Å´1Âõû„Å†„ÅëÂÆüË°å
 */

/**
 * „ÉÜ„Çπ„ÉàÈñãÂßãÂâç: MSW„Çµ„Éº„Éê„Éº„ÇíËµ∑Âãï
 *
 * „Åì„Çå„Å´„Çà„Çä„ÄÅ„ÉÜ„Çπ„Éà‰∏≠„ÅÆ„Åô„Åπ„Å¶„ÅÆ„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„É™„ÇØ„Ç®„Çπ„Éà„Åå
 * „É¢„ÉÉ„ÇØ„Éè„É≥„Éâ„É©„Éº„Å´„É´„Éº„ÉÜ„Ç£„É≥„Ç∞„Åï„Çå„Åæ„Åô„ÄÇ
 */
beforeAll(() => {
  console.log('üé≠ MSW „Çµ„Éº„Éê„Éº„ÇíËµ∑Âãï„Åó„Åæ„Åô...')
  server.listen({
    // „Éè„É≥„Éâ„É©„Éº„ÅåÂÆöÁæ©„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑ„É™„ÇØ„Ç®„Çπ„Éà„Åå„ÅÇ„Å£„ÅüÂ†¥Âêà„ÄÅË≠¶Âëä„ÇíÂá∫„Åô
    onUnhandledRequest: 'warn',
  })
})

/**
 * ÂêÑ„ÉÜ„Çπ„ÉàÁµÇ‰∫ÜÂæå: „Éè„É≥„Éâ„É©„Éº„Çí„É™„Çª„ÉÉ„Éà
 *
 * „ÉÜ„Çπ„ÉàÂÜÖ„Åß server.use() „Çí‰Ωø„Å£„Å¶‰∏ÄÊôÇÁöÑ„Å´„Éè„É≥„Éâ„É©„Éº„Çí‰∏äÊõ∏„Åç„Åó„ÅüÂ†¥Âêà„ÄÅ
 * Ê¨°„ÅÆ„ÉÜ„Çπ„Éà„Å´ÂΩ±Èüø„Åó„Å™„ÅÑ„Çà„ÅÜ„Å´„É™„Çª„ÉÉ„Éà„Åó„Åæ„Åô„ÄÇ
 *
 * ‰æã:
 * ```typescript
 * test('„Ç®„É©„Éº„Ç±„Éº„Çπ', () => {
 *   server.use(
 *     http.get('/api/user/:userId', () => {
 *       return HttpResponse.json({ error: '„Ç®„É©„Éº' }, { status: 500 })
 *     })
 *   )
 *   // „Åì„ÅÆ„ÉÜ„Çπ„Éà„Å†„Åë„Ç®„É©„Éº„É¨„Çπ„Éù„É≥„Çπ
 * })
 *
 * test('Ê≠£Â∏∏„Ç±„Éº„Çπ', () => {
 *   // server.resetHandlers() „Å´„Çà„Çä„ÄÅÂÖÉ„ÅÆ„Éè„É≥„Éâ„É©„Éº„Å´Êàª„Çã
 *   // ‚Üí Ê≠£Â∏∏„Å™„É¨„Çπ„Éù„É≥„Çπ„ÅåËøî„Çã
 * })
 * ```
 */
afterEach(() => {
  server.resetHandlers()
})

/**
 * „ÉÜ„Çπ„ÉàÁµÇ‰∫ÜÂæå: MSW„Çµ„Éº„Éê„Éº„ÇíÂÅúÊ≠¢
 *
 * „ÉÜ„Çπ„Éà„ÅåÂÖ®„Å¶ÂÆå‰∫Ü„Åó„Åü„Çâ„ÄÅMSW„Çµ„Éº„Éê„Éº„Çí„ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó„Åó„Åæ„Åô„ÄÇ
 * „É°„É¢„É™„É™„Éº„ÇØ„ÇíÈò≤„Åê„Åü„ÇÅ„Å´ÈáçË¶Å„Åß„Åô„ÄÇ
 */
afterAll(() => {
  console.log('üé≠ MSW „Çµ„Éº„Éê„Éº„ÇíÂÅúÊ≠¢„Åó„Åæ„Åô...')
  server.close()
})

/**
 * ‰ΩøÁî®‰æã: „ÉÜ„Çπ„Éà„Éï„Ç°„Ç§„É´ÂÜÖ„Åß„ÅÆ‰Ωø„ÅÑÊñπ
 *
 * ```typescript
 * // src/__tests__/api/messages.test.ts
 *
 * import { server } from '@/__mocks__/server'
 * import { http, HttpResponse } from 'msw'
 *
 * describe('„É°„ÉÉ„Çª„Éº„Ç∏API', () => {
 *   test('„É°„ÉÉ„Çª„Éº„Ç∏‰∏ÄË¶ßÂèñÂæó', async () => {
 *     const response = await fetch('/api/messages/channel-1')
 *     const data = await response.json()
 *
 *     expect(data.success).toBe(true)
 *     expect(data.messages).toHaveLength(2) // handlers.ts „ÅÆ„É¢„ÉÉ„ÇØ„Éá„Éº„Çø
 *   })
 *
 *   test('„Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞', async () => {
 *     // „Åì„ÅÆ„ÉÜ„Çπ„Éà„Å†„Åë„Ç®„É©„Éº„É¨„Çπ„Éù„É≥„Çπ„ÇíËøî„Åô
 *     server.use(
 *       http.get('/api/messages/:channelId', () => {
 *         return HttpResponse.json(
 *           { success: false, error: '„Çµ„Éº„Éê„Éº„Ç®„É©„Éº' },
 *           { status: 500 }
 *         )
 *       })
 *     )
 *
 *     const response = await fetch('/api/messages/channel-1')
 *     const data = await response.json()
 *
 *     expect(response.status).toBe(500)
 *     expect(data.success).toBe(false)
 *   })
 * })
 * ```
 */
